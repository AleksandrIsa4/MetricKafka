version: '3.8'
services:
  metrics-producer:
    build: metrics-producer
    container_name: metrics-producer
    ports:
      - "8080:8080"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  consumer-service:
    build: metrics-consumer/consumer-service
    container_name: consumer-service
    ports:
      - "8081:8081"
    depends_on:
      - consumer-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://consumer-db:5432/consumer-metrics
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093

  consumer-db:
    image: postgres:14-alpine
    container_name: consumer-db
    ports:
      - "6542:5432"
    environment:
      - POSTGRES_DB=consumer-metrics
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root